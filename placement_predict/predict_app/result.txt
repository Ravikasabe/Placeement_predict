PS C:\Users\RMK\OneDrive\Desktop\IT_Expert\Django_It-Expert\Placeement_predict> & C:/Users/RMK/anaconda3/python.exe c:/Users/RMK/OneDrive/Desktop/IT_Expert/Django_It-Expert/Placeement_predict/placement_predict/predict_app/training.py
   sl_no  gender  ssc_p  ssc_b  hsc_p  hsc_b  hsc_s  degree_p  degree_t  workex  etest_p  specialisation  mba_p  status    salary
0      1       0  67.00      1  91.00      1      1     58.00         2       0     55.0               1  58.80       1  270000.0
1      2       0  79.33      0  78.33      1      2     77.48         2       1     86.5               0  66.28       1  200000.0
2      3       0  65.00      0  68.00      0      0     64.00         0       0     75.0               0  57.80       1  250000.0
3      4       0  56.00      0  52.00      0      2     52.00         2       0     66.0               1  59.43       0       NaN
4      5       0  85.80      0  73.60      0      1     73.30         0       0     96.8               0  55.50       1  425000.0
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 215 entries, 0 to 214
Data columns (total 15 columns):
 #   Column          Non-Null Count  Dtype
---  ------          --------------  -----
 0   sl_no           215 non-null    int64
 1   gender          215 non-null    int64
 2   ssc_p           215 non-null    float64
 3   ssc_b           215 non-null    int32
 4   hsc_p           215 non-null    float64
 5   hsc_b           215 non-null    int32
 6   hsc_s           215 non-null    int32
 7   degree_p        215 non-null    float64
 8   degree_t        215 non-null    int32
 9   workex          215 non-null    int32
 10  etest_p         215 non-null    float64
 11  specialisation  215 non-null    int32
 12  mba_p           215 non-null    float64
 13  status          215 non-null    int32
 14  salary          148 non-null    float64
dtypes: float64(6), int32(7), int64(2)
memory usage: 19.4 KB
None
(215, 15)
            sl_no      gender       ssc_p       ssc_b       hsc_p  ...     etest_p  specialisation       mba_p      status         salary
count  215.000000  215.000000  215.000000  215.000000  215.000000  ...  215.000000      215.000000  215.000000  215.000000     148.000000
mean   108.000000    0.353488   67.303395    0.460465   66.333163  ...   72.100558        0.441860   62.278186    0.688372  288655.405405
std     62.209324    0.479168   10.827205    0.499598   10.897509  ...   13.275956        0.497767    5.833385    0.464240   93457.452420
min      1.000000    0.000000   40.890000    0.000000   37.000000  ...   50.000000        0.000000   51.210000    0.000000  200000.000000
25%     54.500000    0.000000   60.600000    0.000000   60.900000  ...   60.000000        0.000000   57.945000    0.000000  240000.000000
50%    108.000000    0.000000   67.000000    0.000000   65.000000  ...   71.000000        0.000000   62.000000    1.000000  265000.000000
75%    161.500000    1.000000   75.700000    1.000000   73.000000  ...   83.500000        1.000000   66.255000    1.000000  300000.000000
max    215.000000    1.000000   89.400000    1.000000   97.700000  ...   98.000000        1.000000   77.890000    1.000000  940000.000000

[8 rows x 15 columns]
0
sl_no              0
gender             0
ssc_p              0
ssc_b              0
hsc_p              0
hsc_b              0
hsc_s              0
degree_p           0
degree_t           0
workex             0
etest_p            0
specialisation     0
mba_p              0
status             0
salary            67
dtype: int64
gender              2
ssc_b               2
hsc_b               2
workex              2
specialisation      2
status              2
hsc_s               3
degree_t            3
salary             45
degree_p           89
hsc_p              97
etest_p           100
ssc_p             103
mba_p             205
sl_no             215
dtype: int64
<class 'pandas.core.frame.DataFrame'>
<class 'pandas.core.series.Series'>
[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1]
========================================
==========
C:\Users\RMK\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
C:\Users\RMK\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
C:\Users\RMK\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Classification Report :                precision    recall  f1-score   support

           0       0.00      0.00      0.00        20
           1       0.53      1.00      0.70        23

    accuracy                           0.53        43
   macro avg       0.27      0.50      0.35        43
weighted avg       0.29      0.53      0.37        43
t to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Classification Report :                precision    recall  f1-score   support

           0       0.00      0.00      0.00        20
           1       0.53      1.00      0.70        23

    accuracy                           0.53        43
   macro avg       0.27      0.50      0.35        43
weighted avg       0.29      0.53      0.37        43
  _warn_prf(average, modifier, msg_start, len(result))
Classification Report :                precision    recall  f1-score   support

           0       0.00      0.00      0.00        20
           1       0.53      1.00      0.70        23

    accuracy                           0.53        43
   macro avg       0.27      0.50      0.35        43
weighted avg       0.29      0.53      0.37        43
Classification Report :                precision    recall  f1-score   support

           0       0.00      0.00      0.00        20
           1       0.53      1.00      0.70        23

    accuracy                           0.53        43
   macro avg       0.27      0.50      0.35        43
weighted avg       0.29      0.53      0.37        43

           0       0.00      0.00      0.00        20
           1       0.53      1.00      0.70        23

    accuracy                           0.53        43
   macro avg       0.27      0.50      0.35        43
weighted avg       0.29      0.53      0.37        43
           0       0.00      0.00      0.00        20
           1       0.53      1.00      0.70        23

    accuracy                           0.53        43
   macro avg       0.27      0.50      0.35        43
weighted avg       0.29      0.53      0.37        43

Accuracy :  53.48837209302325
Accuracy:  53.49
==================
   macro avg       0.27      0.50      0.35        43
weighted avg       0.29      0.53      0.37        43

Accuracy :  53.48837209302325
Accuracy:  53.49
==================

Accuracy :  53.48837209302325
Accuracy:  53.49
==================
==================
Confusion Matrix:
  [[ 0 20]
 [ 0 23]]
Model saved as model.joblib
PS C:\Users\RMK\OneDrive\Desktop\IT_Expert\Django_It-Expert\Placeement_predict>

Confusion Matrix:
  [[ 0 20]
 [ 0 23]]
Model saved as model.joblib
Confusion Matrix:
  [[ 0 20]
 [ 0 23]]
Confusion Matrix:
  [[ 0 20]
Confusion Matrix:
Confusion Matrix:
Confusion Matrix:
  [[ 0 20]
 [ 0 23]]
Confusion Matrix:
  [[ 0 20]
 [ 0 23]]
Confusion Matrix:
  [[ 0 20]
Confusion Matrix:
  [[ 0 20]
Confusion Matrix:
Confusion Matrix:
Confusion Matrix:
Confusion Matrix:
Confusion Matrix:
  [[ 0 20]
 [ 0 23]]
Confusion Matrix:
  [[ 0 20]
Confusion Matrix:
Confusion Matrix:
  [[ 0 20]
 [ 0 23]]
Model saved as model.joblib
PS C:\Users\RMK\OneDrive\Desktop\IT_Expert\Django_It-Expert\Placeement_predict>


































///////   Main Placement Result /////////////////






    X, y = check_X_y(X, y, **check_params)
PS C:\Users\RMK\OneDrive\Desktop\IT_Expert\Django_It-Expert\Placeement_predict\placement_predict> & C:/Users/RMK/anaconda3/python.exe c:/Users/RMK/OneDrive/Desktop/IT_Expert/Django_It-Expert/Placeement_predict/placement_predict/predict_app/training.py
========================================
Classification Report:
               precision    recall  f1-score   support

           0       0.38      1.00      0.55        13
           1       1.00      0.30      0.46        30

    accuracy                           0.51        43
   macro avg       0.69      0.65      0.51        43
weighted avg       0.81      0.51      0.49        43
    accuracy                           0.51        43
   macro avg       0.69      0.65      0.51        43
weighted avg       0.81      0.51      0.49        43
weighted avg       0.81      0.51      0.49        43


Accuracy: 51.16
==================
Accuracy: 51.16
==================
==================
Confusion Matrix:
Confusion Matrix:
 [[13  0]
 [21  9]]
Model saved as model.joblib   